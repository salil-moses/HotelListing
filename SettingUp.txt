After creating basic Project

Installing Serilog
**********************

from nuget install serilog.aspnetcore

make changes in program.cs for loggiing


Setup the Cors policy in Startup.cs



Add the Data Folder

In Data Folder, add the data model classes and the dbcontext file

Install  Microsoft.EntityFrameworkCore from nuget (make sure right 5.12 for .net 5  6.0 for .net 6)
Also install Microsoft.EntityFrameworkCore.SqlServer (check for proper .net version)
Also install Microsoft.EntityFrameworkCore.Tools (check for proper .net version)

Add the conn string in appsettings.json

complete the data modelling by adding the fk relations etc.

use the package manager console to complete the initial DB migration

PM> Add-Migration DatabaseCreated
This will create the migrations folder with the first migration
PM> UPDATE-DATABASE  (this commits the data migration)


Add the IRepository, Repository Folders
Setup the Generics and UOW register/implementation

Add the DTOS to the Models folder

Install via nuget AutoMapper extensions for ASP.NET Core

Create folder Configurations folder and add the MapperInitializer.cs file in it for Automapper

Then add in the startup.cs file


Add the controller - empty web api controller

If there is a json circular reference problem
install pkg  Microsoft.AspNetCore.Mvc.NewtonsoftJson (choose proper core version)
make changes to the services.AddControllers in startup.cs


Authentication Start
Install User Identity Core

install Microsoft.AspNetCore.Identity.EntityFrameworkCore;  choose proper core version

make changes to DatabaseContext.cs
make changes to Startup.cs  (this change will be made in the ServiceExtensions class instead, so startup.cs is not very large)

Add the APIUser class in the Data Folder (This extends the built in IdentityUser class to add more fields to the identity DB table)
make changes to DatabaseContext.cs to use this new class

Add ServiceExtensions class in the main solution folder 
make changes to Startup.cs to use the extension methods

In PM console add the DB migration for identity
PM> Add-Migration  AddedIdentity
PM> UPDATE-DATABASE


Add the AccountController in the Controllers folder

create the UserDTO class in the Models folder
update the mapper initializer

edit the userDTO to add the loginUserDTO


add roles
add the config (seed data) in Configuration/Entites/Roleconfigurations
PM> Add-Migration AddedUserRoles
PM> UPDATE-DATABASE

update UserDTO to include the roles
also update account controller


JWT Authentication
make changes to the appsettings.json
Store the key as an Environment variable
Cmd prompt as Admin 
> setx HL_API_KEY "Just!29Some&Secret#Key)(Valuehere!!" /M   (/M is system variable)

install Microsoft.AspNetCore.Authentication.JwtBearer   (choose core version)

add new Folder Services
add interface IAuthManager and class AuthManager in this folder	(this is the service that builds the token with options)
Register these in the Startup.cs

update the accounts controller with IAuthManager

add jwt to swagger docs
edit the startup.cs







